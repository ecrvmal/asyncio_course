# Sample Output:
#
# Найдено соответствие для 'COVID-19': Новая волна COVID-19 обрушилась на Европу
# Найдено соответствие для 'игр': Конференция разработчиков игр пройдет онлайн
# Найдено соответствие для 'новый вид': Открыт новый вид подводных животных
# Найдено соответствие для 'COVID-19': Новые исследования о влиянии COVID-19 на здоровье
# Найдено соответствие для 'игр': Выставка игр E3 переходит в онлайн-формат
# Найдено соответствие для 'новый вид': Ученые обнаружили новый вид глубоководных рыб
# Найдено соответствие для 'COVID-19': Вакцинация от COVID-19 становится обязательной
# Найдено соответствие для 'игр': Разработчики анонсировали новую игру в жанре RPG
# Найдено соответствие для 'новый вид': Исследователи описали новый вид насекомых
# Найдено соответствие для 'COVID-19': COVID-19: новые ограничения вводятся в странах
# Найдено соответствие для 'игр': Киберспорт: растущая популярность в мире игр
# Найдено соответствие для 'новый вид': Обнаружен новый вид микроорганизмов в океане
# Найдено соответствие для 'COVID-19': Пандемия COVID-19: как защитить себя и близких
import asyncio

news_list = [
    "Новая волна COVID-19 обрушилась на Европу",
    "Рынки акций растут на фоне новостей о вакцине",]

keyword = ["COVID-19", "игр", "новый вид"]

async def analyze_news(keyword, news_list, delay):
    for news in news_list:
        if keyword in news:
            print(f"Найдено соответствие для '{keyword}': {news}")
            await asyncio.sleep(delay)

async def main():
    # Создаем асинхронные задачи для каждой корутины с разными ключевыми словами и задержками
    task1 = asyncio.create_task(analyze_news(keyword[0], news_list, 0.1 ))
    task2 = asyncio.create_task(analyze_news(keyword[1], news_list, 0.1 ))
    task3 = asyncio.create_task(analyze_news(keyword[2], news_list, 0.1 ))

    # Ожидаем выполнения всех задач
    await asyncio.gather(task1, task2, task3)

asyncio.run(main())
