import asyncio

# Определяем асинхронную функцию (корутину), которая "спит" на 1 секунду
async def my_coroutine(i):
    name = asyncio.current_task().get_name()
    print(f"Корутина {name} запустилась")          # Выводим сообщение о том, что корутина запустилась
    await asyncio.sleep(1)                      # Используем asyncio.sleep для имитации блокирующей операции. Оператор await позволяет корутине "спать" без блокировки всего приложения
    print(f"Корутина {name} завершилась")          # Выводим сообщение о том, что корутина завершилась

# Определяем главную корутину, которая будет управлять другими корутинами
async def main():
    tasks = [asyncio.create_task(my_coroutine(i), name=f'task_{i}') for i in range(5)]    # Создаем список задач из корутин, которые "спят" 1 секунду. Задачи начнут выполняться, когда будут готовы
    await asyncio.gather(*tasks)                                        # Используем asyncio.gather для ожидания завершения всех задач. Оператор * используется для распаковки списка задач


asyncio.run(main())