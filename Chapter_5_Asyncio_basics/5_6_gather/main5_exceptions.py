import asyncio

return_exceptions = True


async def my_coro(num):                         # Определяем асинхронную функцию (корутину) my_coro с аргументом num
    print(f"Корутина {num} началась")           # Выводим сообщение о начале работы корутины с указанием ее номера
    await asyncio.sleep(num)                    # Используем асинхронный sleep, чтобы "приостановить" выполнение этой корутины на количество секунд, равное num
    if num % 2 == 0:                            # Если число num является четным
        raise Exception(f"Ошибка в корутине {num}") # Генерируем исключение с указанием номера корутины
    print(f"Корутина {num} закончилась")        # Выводим сообщение о завершении работы корутины с указанием ее номера
    return num                                  # Возвращаем номер корутины как результат ее выполнения


async def main():                               # Определяем основную асинхронную функцию main
    coros = [my_coro(i) for i in range(1, 6)]   # Создаем список корутин, передавая в каждую уникальное число от 1 до 5
    results = await asyncio.gather(*coros, return_exceptions=True) # Используем asyncio.gather, чтобы запустить все корутины одновременно, при этом возвращая исключения вместо их прерывания выполнения
    print(results)
    for result in results:                      # Для каждого результата из списка результатов
        if isinstance(result, Exception):       # Если результат является экземпляром класса Exception (то есть было сгенерировано исключение)
            print(f"Ошибка: {result}")          # Выводим сообщение об ошибке
        else:                                   # Если результат не является исключением
            print(result)                       # Выводим сам результат

asyncio.run(main())

# Корутина 1 началась
# Корутина 2 началась
# Корутина 3 началась
# Корутина 4 началась
# Корутина 5 началась
# Корутина 1 закончилась
# Корутина 3 закончилась
# Корутина 5 закончилась
# [1, Exception('Ошибка в корутине 2'), 3, Exception('Ошибка в корутине 4'), 5]
# 1
# Ошибка: Ошибка в корутине 2
# 3
# Ошибка: Ошибка в корутине 4
# 5
#
# Process finished with exit code 0