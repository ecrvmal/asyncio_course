# Пример кода, демонстрирующий polling:

import asyncio
import random


async def process_data(data):
    print(f"Полученные данные: {data}")                     # Вывод полученных данных на экран

    # Может включать в себя любую другую логику, которую вы хотите выполнить с полученными данными,
    # например, сохранение в базу данных, отправку уведомлений или обновление интерфейса пользователя.


async def polling_network_device():                         # Асинхронная функция для опроса сетевого устройства
    while True:                                             # Бесконечный цикл
        data = random.randint(0, 1000000)                   # Генерация случайного числа в качестве данных
        await process_data(data)                            # Вызов асинхронной функции обработки данных

                                                            # Здесь мы можем выполнить какие-то действия, такие как отправку запроса к устройству и получение ответа

        await asyncio.sleep(5)                              # Ожидание 5 секунд перед следующим опросом


async def main():                                           # Асинхронная функция main для запуска основной логики
    task = asyncio.create_task(polling_network_device())    # Создание задачи для опроса сетевого устройства
    await task                                              # Ожидание выполнения задачи


asyncio.run(main())